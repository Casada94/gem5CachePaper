\subsection{Sha Benchmark}
In order to evaluate the performance, we conducted a benchmark test using the SHA (Secure Hash Algorithm).SHA is a family of cryptographic hash functions that are used to generate a fixed-size message digest from input data of any size. The message digest is designed to be unique and non-reversible, which makes it useful for verifying the integrity and authenticity of digital information.There are currently several variants of the SHA algorithm, including SHA-1, SHA-2 (which includes SHA-224, SHA-256, SHA-384, and SHA-512), and SHA-3.

For the observation, we calculated the cache miss rate using the LRU replacement policy, grouping it with block sizes of 32 and 64, and varying the cache sizes of 16kb, 32kb, and 64kb. Fig 1 illustrates the results of our experiments.

\begin{figure}[H]
    \centering
    \includegraphics[width=0.45\textwidth]{sha/sha_cache_vs_setAssocBL32.png}
    \caption{The bar chart illustrates the cache miss rates for different cache sizes, including 16KB, 32KB, and 64KB with LRU replacement policy and 32 block size.}
    % \label{fig:EmpC1-Training}
\end{figure}

With a block size of 32 and a cache size of 16kb, and a set associativity of 1, we observed a cache miss rate of 0.002082. However, as the set associativity increased from 2 to 4, we noticed a drop in the cache miss rate. On the other hand, with cache sizes of 32kb and 64kb, the cache miss rate showed less deviation regardless of the set associativity.

\begin{figure}[H]
    \centering
    \includegraphics[width=0.45\textwidth]{sha/sha_cache_vs_setAssocBL64.png}
    \caption{The bar chart illustrates the cache miss rates for different cache sizes, including 16KB, 32KB, and 64KB with LRU replacement policy and 64 block size.}
    % \label{fig:EmpC1-Training}
\end{figure}

Figure 2 presents the cache miss rate results with a block size set as 64, a cache size of 16kb, and a set associativity of 1. In this configuration, the cache miss rate was observed to be 0.001342. Interestingly, when comparing the results with block sizes of 32 and 64, we noticed that the cache miss rate with a block size of 64 was nearly half of that with a block size of 32.


\begin{figure}[H]
    \centering
    \includegraphics[width=0.45\textwidth]{sha/sha_cache_vs_repl8.png}
    \caption{Cache miss rates with different replacement policies (LRU, Random, and FIFO) with varying the cache sizes and block sizes.}
    % \label{fig:EmpC1-Training}
\end{figure}

Fig3 shows a bar chart indicating that all three replacement policies exhibit certain similarities in their cache miss rates across different variations of cache size and block size.


We observed that the Random and FIFO replacement policies had similar cache miss rates when using a 16kb cache size and a block size of 32. However, the LRU replacement policy had a slightly lower cache miss rate under these conditions. Additionally, we observed a significant drop in cache miss rate for all replacement policies when increasing the block size from 32 to 64 in a 32kb cache size. We also observed that the cache miss rate was lowest when using a 64kb cache size and a block size of 32 or 64, regardless of the replacement policy used. This finding was consistent across all three replacement policies (LRU, Random, and FIFO).


From a total of 72 simulations run on the SHA benchmark with multiple configurations, different results were obtained on each iteration. The biggest simulated cache miss rate was 0.002082, while the smallest was 0.000007.

\begin{figure}[H]
    \centering
    \includegraphics[width=0.45\textwidth]{sha/sha_avg_cachesize.png}
    \caption{The bar chart illustrates the cache miss rates for different cache sizes, including 16KB, 32KB, and 64KB. The x-axis represents the cache size, while the y-axis represents the cache miss rate.}
    % \label{fig:EmpC1-Training}
\end{figure}

The results show that as the cache size increases, the cache miss rate decreases. The cache miss rate for a 16KB cache size was the highest at 0.0004427916667 on average with a standard deviation of 0.0007721100946. However, as the cache size increased to 32KB and 64KB, the cache miss rates decreased significantly to 0.00001034782609 and 0.00001, respectively, with lower standard deviations of 0.000003083809563 and 0.000003064523511. These findings suggest that a larger cache size can significantly improve the performance of the SHA benchmark by reducing the number of cache misses, ultimately leading to faster processing times.

\space


We observed that doubling the block size from 32 to 64 resulted in a significant improvement in performance across different cache sizes, set associativity, and replacement policies. On average, the performance improvement was 41.63%.

The 2:1 rule of thumb, which states that the miss rate of a cache stays the same if the cache size is halved and the block size is doubled, has been widely accepted in computer architecture. However, recent studies have shown that this rule may not hold true for certain workloads. Specifically, in the case of the SHA benchmark, our analysis of 32 tests revealed that the miss rate difference was observed in 18 cases after grouping. This suggests that the 2:1 rule of thumb may not be accurate for this particular workload.

